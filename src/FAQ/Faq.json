{
  "General Questions": [
    {
      "id": 1,
      "title": "Can you tell us about yourself?",
      "description": "Sure! I have a background in [Your Field], with a focus on [Key Skills]. I’ve worked on projects involving [Mention Key Projects/Technologies], and I'm passionate about [Your Interests]."
    },
    {
      "id": 2,
      "title": "How would you describe yourself?",
      "description": "I would describe myself as [Positive Traits]. I’m dedicated to [Your Field/Industry] and have a proven track record of [Key Achievements]."
    },
    {
      "id": 3,
      "title": "What makes you unique?",
      "description": "My unique combination of [Skills/Experiences] sets me apart. I bring [Specific Quality or Achievement], which I believe can contribute significantly to your team."
    },
    {
      "id": 4,
      "title": "Why do you want to work here?",
      "description": "I’m impressed by [Company’s] innovative approach to [Industry/Technology]. I believe my skills in [Your Skills] align perfectly with your team’s goals, and I’m eager to contribute to [Specific Project or Initiative]."
    },
    {
      "id": 5,
      "title": "What interests you about this role?",
      "description": "I’m particularly interested in this role because [Reason]. I see it as an opportunity to [What You Hope to Achieve], and I’m excited about the potential to [Impact on the Company/Team]."
    },
    {
      "id": 6,
      "title": "What motivates you?",
      "description": "I am motivated by [Motivational Factors], such as [Achieving Goals, Learning New Skills, Contributing to Team Success]. These drive me to consistently perform at my best."
    },
    {
      "id": 7,
      "title": "What are you passionate about?",
      "description": "I am passionate about [Your Passion], and I love how it allows me to [How It Relates to the Job or Industry]. This passion keeps me engaged and constantly striving for excellence."
    },
    {
      "id": 8,
      "title": "Why are you leaving your current job?",
      "description": "I am looking for new challenges and opportunities to grow. My current role has been rewarding, but I believe this position at [Company] will better align with my career goals and aspirations."
    },
    {
      "id": 9,
      "title": "What are your greatest strengths?",
      "description": "My greatest strengths are [Strengths], which have enabled me to [Achieve Success in Past Roles]. These strengths are particularly relevant to this position because [Reason]."
    },
    {
      "id": 10,
      "title": "What are your greatest weaknesses?",
      "description": "One area I’m working on improving is [Weakness]. I’ve been actively addressing it by [Steps Taken to Improve], and I’ve seen significant progress."
    }
  ],
  "Technical Questions": [
    {
      "id": 11,
      "title": "What are the differences between `var`, `let`, and `const` in JavaScript?",
      "description": "`var` is function-scoped, `let` is block-scoped, and `const` is block-scoped and immutable. Use `let` for variables that will change and `const` for constants."
    },
    {
      "id": 12,
      "title": "How do you handle asynchronous code in JavaScript?",
      "description": "I use Promises, `async`/`await`, or callbacks. For instance, with Promises: `fetchData().then(response => console.log(response)).catch(error => console.error(error));`"
    },
    {
      "id": 15,
      "title": "Can you explain the concept of closures in JavaScript?",
      "description": "Closures allow a function to access variables from its outer scope even after the outer function has returned. This is useful for creating private variables and function factories."
    }
  ],
  "Domain-Specific Questions": [
    {
      "id": 16,
      "title": "How do you start working with RESTful APIs?",
      "description": "Use tools like Postman to send requests and explore endpoints. Start with simple GET requests to understand the response structure and then move on to POST, PUT, DELETE methods."
    },
    {
      "id": 17,
      "title": "What is a simple way to begin with machine learning using supervised learning?",
      "description": "Start with basic algorithms like linear regression or decision trees using Scikit-learn. Focus on understanding the data and model evaluation metrics like accuracy and precision."
    },
    {
      "id": 18,
      "title": "What are the basics of managing passwords securely?",
      "description": "Use strong, unique passwords for each account, store them in a password manager, and enable multi-factor authentication (MFA) to enhance security."
    }
  ],
  "DevOps Questions": [
    {
      "id": 19,
      "title": "What is Continuous Integration (CI), and how do you set it up?",
      "description": "CI is the practice of automatically testing and integrating code changes. Tools like GitHub Actions or Travis CI can be configured to run tests and builds on each commit."
    },
    {
      "id": 20,
      "title": "How do you use Docker for application deployment?",
      "description": "Docker packages applications and their dependencies into containers. Start with creating a Dockerfile, build an image using `docker build`, and run containers with `docker run`."
    }
  ],
  "Security Questions": [
    {
      "id": 21,
      "title": "How do you protect against Cross-Site Scripting (XSS)?",
      "description": "Validate and sanitize all user inputs and implement Content Security Policy (CSP) to prevent the execution of malicious scripts."
    },
    {
      "id": 22,
      "title": "What is HTTPS, and how does it secure a website?",
      "description": "HTTPS encrypts data between the browser and server using SSL/TLS, ensuring secure communication and protecting sensitive information from eavesdropping."
    }
  ],
  "Performance Optimization Questions": [
    {
      "id": 23,
      "title": "What is lazy loading, and how does it improve performance?",
      "description": "Lazy loading delays the loading of non-critical resources until they are needed, reducing initial load time and improving page performance."
    },
    {
      "id": 24,
      "title": "How can memoization enhance function performance?",
      "description": "Memoization caches the results of expensive function calls. By storing previous results, it avoids redundant calculations, thus speeding up function execution."
    }
  ]
}
